{\rtf1\ansi\ansicpg1252\cocoartf2638
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fswiss\fcharset0 Helvetica-Bold;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
Para este sistema usaremos la API: https://rapidapi.com/apidojo/api/shazam\
\
El prop\'f3sito de este documento es analizar y desarrollar mediante la metodolog\'eda m\'e1s adecuada un sistema de venta de entradas para conciertos.\
Dentro de este se describen todos los requerimientos y funciones.\
\

\f1\b Requerimientos Funcionales
\f0\b0 : \
\
- Se realizar\'e1 un sistema que permita la compra de entradas por parte de un cliente a recitales.\
- Condiciones de venta : Se permite la compra de un m\'e1ximo de 4 entradas por operaci\'f3n.\
- Cuando se intente realizar una compra que supere la cantidad de entradas permitidas por persona, la compra pasara al estado "Rechazada". (Patr\'f3n de comportamiento: STATE).\
- El cliente al hacer la compra tendr\'e1 la posibilidad de elegir el m\'e9todo de pago entre los cuales pueden ser usando una tarjeta de debito, cr\'e9dito o tambi\'e9n en efectivo a trav\'e9s de un punto de pago f\'edsico. (Patr\'f3n estructural: ADAPTER). \
- Se puede agregar un nuevo punto de pago f\'edsico para los pagos en efectivo. (Patr\'f3n creacional: FACTORY).\
- Se aplicara un descuento a dependiendo si el cliente cuenta con un cup\'f3n o si tiene una membres\'eda. (Patr\'f3n de comportamiento: STRATEGY).\
- Se verificar\'e1 el retiro de el/los tickets, utilizando la tarjeta utilizada junto a los datos de la persona que realiz\'f3 la compra. (Base de datos relacional)\
- Se utilizar\'e1 una api para encontrar los artistas que se desean ver y se mostrar\'e1 una foto y link de info para ver. (API)\
\
\

\f1\b Requerimientos No Funcionales:
\f0\b0 \
- El sistema debe ser capaz de tener muchos usuarios conectados al mismo tiempo.\
- El sistema debe proporcionar mensajes de error que sean informativos para el usuario.\
- Todos los artistas de la api est\'e1n disponibles para ver.\
- Las compras no tienen vencimiento, pero s\'ed fecha de emisi\'f3n. }